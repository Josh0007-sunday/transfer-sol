name: CI

on:
  push:
    branches:
    - localnet
    - devnet
    - mainnet
  pull_request:

env:
  SOLANA_VERSION: "1.8.10"
  ANCHOR_VERSION: "0.20.1"
  RUST_TOOLCHAIN: nightly-2021-12-23

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # Install Rust
      - name: Cache Cargo registry + index
        uses: actions/cache@v2
        id: cache-cargo
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: cargo-${{ runner.os }}-v0000-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Rust nightly
        uses: actions-rs/toolchain@v1
        with:
          override: true
          profile: minimal
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          components: rustfmt, clippy

      # Run build and lint
      - name: Cache build
        uses: Swatinem/rust-cache@v1
      
      - name: Build program
        run: cargo build
      
      - name: Run clippy
        run: cargo clippy -- -D warnings -A clippy::too_many_arguments

  ci:
    runs-on: ubuntu-latest
    needs: [validate]
    environment:
      name: localnet
    steps:
      - uses: actions/checkout@v2

      # Install Rust
      - name: Cache Cargo registry + index
        uses: actions/cache@v2
        id: cache-cargo
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: cargo-${{ runner.os }}-v0000-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Rust nightly
        uses: actions-rs/toolchain@v1
        with:
          override: true
          profile: minimal
          toolchain: ${{ env.RUST_TOOLCHAIN }}

      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config build-essential libudev-dev

      # Install Solana
      - name: Cache Solana binaries
        id: solana-cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/solana
            ~/.local/share/solana/install
          key: ${{ runner.os }}-${{ env.SOLANA_VERSION }}

      - name: Install Solana
        if: steps.solana-cache.outputs.cache-hit != 'true'
        run: |
          sh -c "$(curl -sSfL https://release.solana.com/v${{ env.SOLANA_VERSION }}/install)"

      - name: Setup Solana Path
        run: |
          mkdir -p ~/.config/solana/
          echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
          export PATH="/home/runner/.local/share/solana/install/active_release/bin:$PATH"
          solana --version
          solana config get

      # Install Node and Yarn
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Yarn Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      # Install Anchor
      - name: Install Anchor
        run: yarn global add @project-serum/anchor-cli@${{ env.ANCHOR_VERSION }}

      # Run tests
      - name: Cache build
        uses: Swatinem/rust-cache@v1

      - name: Install test dependencies
        run: yarn install

      - name: Build program
        run: anchor build

      - name: Run tests
        run: anchor test

  cd-devnet:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/devnet'
    needs: [ci]
    environment:
      name: devnet
    steps:
      - uses: actions/checkout@v2

      # Install Rust
      - name: Cache Cargo registry + index
        uses: actions/cache@v2
        id: cache-cargo
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: cargo-${{ runner.os }}-v0000-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Rust nightly
        uses: actions-rs/toolchain@v1
        with:
          override: true
          profile: minimal
          toolchain: ${{ env.RUST_TOOLCHAIN }}

      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config build-essential libudev-dev

      # Install Solana
      - name: Cache Solana binaries
        id: solana-cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/solana
            ~/.local/share/solana/install
          key: ${{ runner.os }}-${{ env.SOLANA_VERSION }}

      - name: Install Solana
        if: steps.solana-cache.outputs.cache-hit != 'true'
        run: |
          sh -c "$(curl -sSfL https://release.solana.com/v${{ env.SOLANA_VERSION }}/install)"

      - name: Setup Solana Path
        run: |
          echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
          export PATH="/home/runner/.local/share/solana/install/active_release/bin:$PATH"
          solana --version
          solana config get

      # Setup deployment key
      - name: Setup Solana Config
        run: |
          echo '${{ secrets.SOLANA_DEPLOY_KEY }}' > ~/.config/solana/id.json
          solana config set --url https://api.devnet.solana.com

      # Install Anchor
      - name: Install Anchor
        run: yarn global add @project-serum/anchor-cli@${{ env.ANCHOR_VERSION }}

      # Deploy
      - name: Build and deploy
        run: |
          anchor build
          anchor deploy
